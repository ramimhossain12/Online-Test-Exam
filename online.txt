import java.awt.event.*;
import javax.swing.*;

class OnlineTest extends JFrame implements ActionListener
{
    JLabel l;
    JRadioButton jb[]=new JRadioButton[5];
    JButton b1,b2;
    ButtonGroup bg;
    int count=0,current=0,x=1,y=1,now=0;
    int m[]=new int[10];
    OnlineTest(String s)
    {
        super(s);
        l=new JLabel();
        add(l);
        bg=new ButtonGroup();
        for(int i=0;i<5;i++)
        {
            jb[i]=new JRadioButton();
            add(jb[i]);
            bg.add(jb[i]);
        }
        b1=new JButton("Next Question");
        b2=new JButton("Bookmark");
        b1.addActionListener(this);
        b2.addActionListener(this);
        add(b1);add(b2);
        set();
        l.setBounds(30,40,450,20);
        jb[0].setBounds(50,80,100,20);
        jb[1].setBounds(50,110,100,20);
        jb[2].setBounds(50,140,100,20);
        jb[3].setBounds(50,170,100,20);
        b1.setBounds(100,240,100,30);
        b2.setBounds(270,240,100,30);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(null);
        setLocation(250,100);
        setVisible(true);
        setSize(600,350);
    }
    public void actionPerformed(ActionEvent e)
    {
        if(e.getSource()==b1)
        {
            if(check())
                count=count+1;
            current++;
            set();
            if(current==15)
            {
                b1.setEnabled(false);
                b2.setText("Result");
            }
        }
        if(e.getActionCommand().equals("Bookmark"))
        {
            JButton bk=new JButton("Bookmark"+x);
            bk.setBounds(480,20+30*x,100,30);
            add(bk);
            bk.addActionListener(this);
            m[x]=current;
            x++;
            current++;
            set();
            if(current==9)
                b2.setText("Result");
            setVisible(false);
            setVisible(true);
        }
        for(int i=0,y=1;i<x;i++,y++)
        {
            if(e.getActionCommand().equals("Bookmark"+y))
            {
                if(check())
                    count=count+1;
                now=current;
                current=m[y];
                set();
                ((JButton)e.getSource()).setEnabled(false);
                current=now;
            }
        }

        if(e.getActionCommand().equals("Result"))
        {
            if(check())
                count=count+1;
            current++;
            //System.out.println("correct ans="+count);

            JOptionPane.showMessageDialog(this,"correct ans="+count);
            System.exit(0);
        }
    }
    void set()
    {
        jb[4].setSelected(true);
        if(current==0)
        {
            l.setText("Question 1: Which Set class should be most popular in a multi-threading environment, considering performance constraint??");
            jb[0].setText("HashSet");jb[1].setText("ConcurrentSkipListSet");jb[2].setText("LinkedHashSet ");jb[3].setText("CopyOnWriteArraySet ");


        }
        if(current==1)
        {
            l.setText("Question 2: Which class is available to all the class automatically?");
            jb[0].setText("Swing");jb[1].setText("Applet");jb[2].setText("Object");jb[3].setText("ActionEvent");
        }
        if(current==2)
        {
            l.setText("Question 3: Which Map class should be most popular in a multi-threading environment, considering performance constraint?");
            jb[0].setText("Hashtable");jb[1].setText("CopyOnWriteMap");jb[2].setText("ConcurrentMap");jb[3].setText("lang");
        }
        if(current==3)
        {
            l.setText("Question 4: String class is defined in which package?");
            jb[0].setText("lang");jb[1].setText("Swing");jb[2].setText("Applet");jb[3].setText("awt");
        }
        if(current==4)
        {
            l.setText("Question 5: Which institute is best for java coaching?");
            jb[0].setText("Utek");jb[1].setText("Aptech");jb[2].setText("SSS IT");jb[3].setText("jtek");
        }
        if(current==5)
        {
            l.setText("Question 6: Which one among these is not a keyword?");
            jb[0].setText("class");jb[1].setText("int");jb[2].setText("get");jb[3].setText("if");
        }
        if(current==6)
        {
            l.setText("Question 7: Which allows the removal of elements from a collection?? ");
            jb[0].setText("Swing");jb[1].setText("Actionperformed");jb[2].setText("ActionEvent");
            jb[3].setText("Button");
        }
        if(current==7)
        {
            l.setText("Question 8: which one among these is not a function of Object class?");
            jb[0].setText("toString");jb[1].setText("finalize");jb[2].setText("equals");
            jb[3].setText("getDocumentBase");
        }
        if(current==8)
        {
            l.setText("Question 9: which function is not present in Applet class?");
            jb[0].setText("init");jb[1].setText("main");jb[2].setText("start");jb[3].setText("destroy");
        }
        if(current==9)
        {
            l.setText("Question 10: Which one among these is not a valid component?");
            jb[0].setText("JButton");jb[1].setText("JList");jb[2].setText("JButtonGroup");
            jb[3].setText("JTextArea");
        }
        if(current==10)
        {
            l.setText("Question 11: Which programin language use android app development?");
            jb[0].setText("Java");jb[1].setText("C");jb[2].setText("C#");
            jb[3].setText("Python");
        }
        if(current==11)
        {
            l.setText("Question 12: Which of those isn't an interface within the Collections Framework?");
            jb[0].setText("List");jb[1].setText("Group");jb[2].setText("Map");
            jb[3].setText("Set");
        }
        if(current==12)
        {
            l.setText("Question 13: Which of those assortment categories has the flexibility to grow dynamically?");
            jb[0].setText("Array");jb[1].setText("Arrays");jb[2].setText("None of these");
            jb[3].setText("ArrayList");
        }
        if(current==13)
        {
            l.setText("Question 11: Which interface restricts duplicate elements?");
            jb[0].setText("Collection");jb[1].setText("Group");jb[2].setText("Set");
            jb[3].setText("List");
        }
        if(current==14)
        {
            l.setText("Question 11:  State the number of default number of segments in Concurrent HashMap?");
            jb[0].setText("16");jb[1].setText("13");jb[2].setText("4");
            jb[3].setText("12");
        }
        if(current==15)
        {
            l.setText("Question 11:  The default capacity of a Vector is?");
            jb[0].setText("16");jb[1].setText("10");jb[2].setText("4");
            jb[3].setText("12");
        }
        l.setBounds(30,40,450,20);
        for(int i=0,j=0;i<=90;i+=30,j++)
            jb[j].setBounds(50,80+i,200,20);
    }
    boolean check()
    {
        if(current==0)
            return(jb[1].isSelected());
        if(current==1)
            return(jb[2].isSelected());
        if(current==2)
            return(jb[3].isSelected());
        if(current==3)
            return(jb[0].isSelected());
        if(current==4)
            return(jb[2].isSelected());
        if(current==5)
            return(jb[2].isSelected());
        if(current==6)
            return(jb[1].isSelected());
        if(current==7)
            return(jb[3].isSelected());
        if(current==8)
            return(jb[1].isSelected());
        if(current==9)
            return(jb[2].isSelected());
        if(current==10)
            return(jb[1].isSelected());
        if(current==11)
            return(jb[1].isSelected());
        if(current==12)
            return(jb[3].isSelected());
        if(current==13)
            return(jb[3].isSelected());
        if(current==14)
            return(jb[0].isSelected());
        if(current==15)
            return(jb[1].isSelected());
        return false;
    }
    public static void main(String s[])
    {   int i=100;
        int time;
        while (i>100)
        {
            time =i*100;
            System.out.println("Your quiz stop "+time +"miliseconds");
            i=i-1;

        }
        new OnlineTest("Online Test Of Java");
    }
}
